## Работа 4. Детектирование границ документов на кадрах видео
автор: Альмиева Р.Р.

дата: @time_stemp@

url: https://github.com/idRain/almieva_r_r/tree/main/prj.labs/lab04

### Задание
0. текст, иллюстрации и подписи отчета придумываем самостоятельно
1. самостоятельно снимаем видео смартфоном
- объект съемки - купюры (рубли разного номинала), расправленные и лежащие на поверхности (проективно искаженны прямоугольник)
- количество роликов - от 5 шт.
- длительность - 5-7 сек
- условия съемки разные
2. извлекаем по 3 кадра из каждого ролика (делим кол-во кадров на 5 и берем каждый с индеком 2/5,3/5,4/5)
3. цветоредуцируем изображения
4. бинаризуем изображения
5. морфологически обрабатываем изображения
6. выделяем основную компоненту связности
7. руками изготавливаем маски (идеальная зона купюры)
8. оцениваем качество выделение зоны и анализируем ошибки

### Базовые предположения

1. На изображении присутствуют только купюра и фон
2. Купюра расположена примерно в центре и отдалена от краев изображения
3. Предмет может быть расположен как на светлом так и на темном фоне
4. Площадь купюры достаточно большая, чтобы отличить ее от шума

### Описание алгоритма нахождения и выделения области купюры

1. Изображение в BGR формате цветоредуцируется и получается изображение в оттенках серого
2. Бинаризуется дважды с помощью локального метода Ниблака для получения двух вариантов: черный предмет на белом фоне и белый на черном. Это делается, так как заранее неизвестно светлой или темной является купюра по отношению к фону.
3. На обоих бинаризованных изображениях находятся компоненты, которые занимают наибольшее пространство и не относятся к фону, то есть никакая из точек компонента не является граничной точкой изображения.
4. Из двух полученных компонентов выбирается наибольшая, согласно предположению 4.
5. Создается новое изображение (маска), на котором только пикселям найденной компоненты соответствует белый цвет
6. Производится дилатация
7. Маска инвертируется. Теперь белый фон является самой большой компонентой связности. Маска изменяется так, чтобы пикселям фона соответствовал черный цвет, а всему остальному белый. Таким образом, устраняются черные области внутри купюры.
8. Таким образом, получается маска, определяющая область купюры.

### Оценка качества

Имеется эталонная маска. Для оценки качества программного выделения области купюры находятся количество пикселей на пересекающейся области масок и на объединённой области, после чего вычисляется отношение этих величин.

### Исходные данные

На первых 9 изображениях купюра очевидно расположена на темном фоне, на следующих трех на светлом, а на последних трех - и купюра, и поверхность являются светлыми, купюра лишь немного темнее,чем фон.

| ![](bgr1.png)  | ![](bgr2.png)  | ![](bgr3.png)  | ![](bgr4.png)  | ![](bgr5.png)  |
| -------------- | -------------- | -------------- | -------------- | -------------- |
| ![](bgr6.png)  | ![](bgr7.png)  | ![](bgr8.png)  | ![](bgr9.png)  | ![](bgr10.png) |
| ![](bgr11.png) | ![](bgr12.png) | ![](bgr13.png) | ![](bgr14.png) | ![](bgr15.png) |

Рис.1-15. Исходные изображения.

### Результаты

Результаты бинаризации

| ![](bin1.png)  | ![](bin2.png)  | ![](bin3.png)  | ![](bin4.png)  | ![](bin5.png)  |
| -------------- | -------------- | -------------- | -------------- | -------------- |
| ![](bin6.png)  | ![](bin7.png)  | ![](bin8.png)  | ![](bin9.png)  | ![](bin10.png) |
| ![](bin11.png) | ![](bin12.png) | ![](bin13.png) | ![](bin14.png) | ![](bin15.png) |

Рис.16-30. Бинаризованные изображения.

| ![](bin_inv1.png)  | ![](bin_inv2.png)  | ![](bin_inv3.png)  | ![](bin_inv4.png)  | ![](bin_inv5.png)  |
| ------------------ | ------------------ | ------------------ | ------------------ | ------------------ |
| ![](bin_inv6.png)  | ![](bin_inv7.png)  | ![](bin_inv8.png)  | ![](bin_inv9.png)  | ![](bin_inv10.png) |
| ![](bin_inv11.png) | ![](bin_inv12.png) | ![](bin_inv13.png) | ![](bin_inv14.png) | ![](bin_inv15.png) |

Рис.31-45. Инвертированные бинаризованные изображения.

Результаты выделения области

| ![](mask1.png)  | ![](mask2.png)  | ![](mask3.png)  | ![](mask4.png)  | ![](mask5.png)  |
| --------------- | --------------- | --------------- | --------------- | --------------- |
| ![](mask6.png)  | ![](mask7.png)  | ![](mask8.png)  | ![](mask9.png)  | ![](mask10.png) |
| ![](mask11.png) | ![](mask12.png) | ![](mask13.png) | ![](mask14.png) | ![](mask15.png) |

Рис.46-60. Маски.

Визуализация точности выделения. Красный цвет соответствует программно полученной области, а синий - эталонной.

| ![](original_with_areas0.png)  | ![](original_with_areas1.png)  | ![](original_with_areas2.png)  | ![](original_with_areas3.png)  | ![](original_with_areas4.png)  |
| ------------------------------ | ------------------------------ | ------------------------------ | ------------------------------ | ------------------------------ |
| ![](original_with_areas5.png)  | ![](original_with_areas6.png)  | ![](original_with_areas7.png)  | ![](original_with_areas8.png)  | ![](original_with_areas9.png)  |
| ![](original_with_areas10.png) | ![](original_with_areas11.png) | ![](original_with_areas12.png) | ![](original_with_areas13.png) | ![](original_with_areas14.png) |

Рис.61-75. Визуализация результата.

В таблице показана точность выделения зоны для каждой из картинок:

| №    | точность в % |
| ---- | ------------ |
| 1    | 98.4708      |
| 2    | 98.8549      |
| 3    | 98.3238      |
| 4    | 98.9222      |
| 5    | 98.7392      |
| 6    | 98.916       |
| 7    | 98.3923      |
| 8    | 98.2567      |
| 9    | 98.4195      |
| 10   | 98.4968      |
| 11   | 98.422       |
| 12   | 98.6125      |
| 13   | 97.5998      |
| 14   | 96.0608      |
| 15   | 97.8165      |

Табл. Точность выделения зоны купюры.

Результаты показывают, что темные элементы на светлом фоне и светлые на темном распознаются с высокой точность. Однако при распознавании светлой купюры на светлом фоне наблюдается меньшая точность. Это происходит так как в некоторых местах купюра может сливаться с фоном, из-за чего некоторое темное место внутри компонента, находящееся близко к границе, может слиться с фоном и эта часть области купюры уже не будет принадлежать получаемой маске.

### Текст программы

```cpp
@cpp_source@
```
